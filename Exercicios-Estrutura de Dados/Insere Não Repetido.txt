#include<stdio.h>
#include<stdlib.h>

struct lista{
	int info;
	struct lista *prox;
};
typedef struct lista Lista;

Lista* inicializa(){
	return NULL;
}

Lista* insereInicioRepetido(Lista *l, int v){
	Lista *novo, *p=l; //Criamos 2 listas, o novo e o p, que é um auxiliar para receber a lista da função
	
    if (l != NULL) { //Se a lista mandada para a função for NULL, ela pulará a função, pois é uma lista vazia, logo, não tem nenhum valor na lista
        do {
            if (p->info == v) { //Fazemos uma estrutura de repetição com do while (pois é uma lista circular), se o numero enviado for igual a da lista, retornamos a lista e cancelamos a inserção
            	printf("Valor repetido! Coloque outro valor!\n");
                return l; //Retorna a lista
            }
            p = p->prox; //Acessamos o próximo ponteiro da lista
        } while (p != l);
    }
	
	novo = (Lista*)malloc(sizeof(Lista));
	novo->info = v;
	
	if(l==NULL)
		novo->prox = novo;
	else{
		novo->prox = l;		
		while(p->prox!=l){			
			p = p->prox;
		}
		p->prox = novo;
	}	
	return novo;
}

void imprimir(Lista *l){
	Lista *p = l;
	
	if(p!=NULL){
		do{
			printf("%x [%d | %x] -> ",p,p->info,p->prox);
			p = p->prox;
		}while(p!=l);
	}
}

int main(){
	Lista *L1;
	L1 = inicializa();
	L1 = insereInicioRepetido(L1,5);
	L1 = insereInicioRepetido(L1,4);
	L1 = insereInicioRepetido(L1,3);
	imprimir(L1);
	return 0;
}
